.data 
.word 19, 2, 4, 11, 1, 5, 20, 16, 12, 13, 8, 10, 7, 3, 6, 14, 9, 18, 17, 15 
arrayBase: .word 1000 
msg1: .string "The Array Before Sorting is \n" 
msg2: .string "Bubble Sorted Array is \n"                    #Bubble Sort
space: .string " " 
newline: .string "\n"
.text 
lw s1, arrayBase 
addi t4, x0, 0 # initialize i=0 
addi t5, x0, 20 # initialize 20 
la a0, msg1 
li a7, 4 
ecall 
PrintLoop: 
lw t6, 0(s1) 
add a0, t6, x0 
li a7, 1 
ecall 
la a0, space 
li a7, 4 
ecall 
addi t4, t4, 1 
beq t4, t5, SortArray 
addi s1, s1, 4 
j PrintLoop # prints Array 
SortArray: 
la a0, newline 
li a7, 4 
ecall 
addi t4, x0, 0 # initialize i 
OuterLoop: 
beq t4, t5, EndSort 
lw s1, arrayBase 
addi t3, x0, 0 # initialize j 
InnerLoop: 
beq t3, t5, exitInnerLoop 
lw a0, 0(s1) 
lw a1, 4(s1) 
ble a0, a1, updateValues 
sw a0, 4(s1) 
sw a1, 0(s1) 
updateValues: 
addi t3, t3, 1 
addi s1, s1, 4 
j InnerLoop 
exitInnerLoop: 
addi t4, t4, 1 
j OuterLoop
EndSort: 
lw s1, arrayBase 
addi t4, x0, 0 # initialize i=0 
addi t5, x0, 20 # initialize 20 
la a0, msg2 
li a7, 4 
ecall 
PrintLoop2: 
beq t4, t5, ExitProgram 
lw t6, 0(s1) 
add a0, t6, x0 
li a7, 1 
ecall 
la a0, space 
li a7, 4 
ecall 
addi t4, t4, 1 
addi s1, s1, 4 
j PrintLoop2 
ExitProgram: 
li a7 4
la a0 newline
ecall
